:root {
  --clr-base-400: #5e5e5e;
  --clr-base-500: #494949;

  --clr-ui-300: #f8e2ff;
  --clr-ui-400: #580d3a;
  --clr-ux-300: #e2ffea;
  --clr-ux-400: #115926;
  --clr-dev-300: #e2fcff;
  --clr-dev-400: #024f4f;

  --clr-accent-400: #7e47c5;

  --ff-accent: "Podkova", serif;
  --ff-base: "Open Sans", sans-serif;

  --fs-300: 0.75rem;
  --fs-400: 1rem;
  --fs-500: 2rem;

  --fw-400: 400;
  --fw-700: 700;

  --shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);
  --border-radius: 0.75rem;
}


/* ///////////////
  Reset
  ////////////// */

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0
}

/* ///////////////
  General styling
  ////////////// */

body {
  font-family: var(--ff-base);
  line-height: 1.6;
  font-size: var(--fs-400);
  font-weight: var(--fw-400);
  color: var(--clr-base-400);
}

ul {
  list-style: none;
}

.btn {
  display: inline-block;

  padding: 0.5em 3em; /*0.5em 2.5em; */
  border-radius: var(--border-radius);
  font-size: var(--fs-400);

  /*
  background: var(--clr-accent-400);
  color: white;
  */
  background: var(--bg, var(--clr-accent-400));
  color: var(--fg, #fff);


  text-transform: uppercase;
  text-decoration: none;
}

/* I am very happy that Kevin has the same solution for .tag */
.tag {
  font-size: var(--fs-300);
  font-weight: var(--fw-700); /* I miss this one */
  text-transform: uppercase;
  /*display: block;*/
  display: inline-block;
  padding: 0.15em 0.75em; /* 2px 12px; */
  border-radius: 9999px;
  margin-right: 0.5em;

  /* It is good to give some default color for the .tag */
  background: var(--bg, lightgray);
  color: var(--fg, #333);
}

/* Oh, i didn't know the plan is to add class into html, i thought html file cannot be touched
.tag:nth-of-type(1) {
  background: var(--clr-ui-300);
  color: var(--clr-ui-400);
}
.tag:nth-of-type(2) {
  background: var(--clr-ux-300);
  color: var(--clr-ux-400);
}
.tag:nth-of-type(3) {
  background: var(--clr-dev-300);
  color: var(--clr-dev-400);
}
*/
.ux {
  --bg: var(--clr-ux-300);
  --fg: var(--clr-ux-400);
}
.ui {
  --bg: var(--clr-ui-300);
  --fg: var(--clr-ui-400);
}
.dev {
  --bg: var(--clr-dev-300);
  --fg: var(--clr-dev-400);
}


/* ///////////////
  Component styling
  ////////////// */

.candidate {
  padding: 1em;
}

.candidate img {
  border-radius: var(--border-radius);
}

.candidate .name {
  font-family: var(--ff-accent);
  font-size: var(--fs-500);
  color: var(--clr-base-500); /* I didn't feel it is this big so I didn't add it before */
  line-height: 1;
}
.candidate .roles {
  margin-top: -0.5em; /* force to override the gap defined in the grid-template */
  /*display: flex;*/
  /*gap: 0.5em;*/
  line-height: 1;
  font-size: var(--fs-300);
}

.candidate .social {
  display: flex;
  justify-content: space-evenly; /* center; It is not space-evenly from the figma */
  /*gap: 27px;*/
  align-items: center;
}
.candidate .social a:hover,
.candidate .social a:focus {
  opacity: 0.5;
}

.candidate .btn {
  /* align-self: end;  I cannot tell which line of code in Kevin's file make the row to be higher, which will require this adjustment */
  justify-self: end;

  /* this is another great solution
  margin-left: auto => would work outside of a grid or flex
  margin-top: auto => will have no impact.
  margin-top: auto;
  margin-left: auto;
  */
}

/* /////////////////
   Layout related
   no need to touch any of this
//////////////////*/

.candidates {
  max-width: 70em;
  margin: 0 auto;
  padding: 2em;
  display: grid;
  gap: 2em;
}

.candidate {
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-template-areas:
    "img social"
    "name name"
    "role role"
    "bio bio"
    "button button";
  gap: 0.5em;
  box-shadow: var(--shadow);
  border-radius: var(--border-radius);
}

@media (min-width: 500px) {
  .candidate {
    grid-template-columns: min-content minmax(15rem, 22.5rem);
    grid-template-rows: min-content min-content 1fr auto;
    grid-template-areas:
      "img name"
      "img role"
      "img bio"
      "social button";
  }
}

@media (min-width: 960px) {
  .candidates {
    grid-template-columns: repeat(2, 1fr);
  }
}

.candidate img {
  grid-area: img;
}
.candidate .name {
  grid-area: name;
}
.candidate .roles {
  grid-area: role;
}
.candidate .bio {
  grid-area: bio;
}
.candidate .social {
  grid-area: social;
}
.candidate .btn {
  grid-area: button;
}
